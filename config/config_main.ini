############################################################################################
# NOTES: 
# 1. For cdf and histogram plots, only provide x-axis as input. They do not have y-axis.
# 2. If you want to generate multiple plots in a subplot, simply add column numbers with comma. e.g. plot_xaxis = 1, 2
# 3. It is recommended not to mix 2D with 3D plots in a subplot
# 4. If you want to plot multiple data in a subplot, add entries separated by comma:
#    E.g. for plotting a bar and a line plot under the same subplot:
#        input_plottype = ['bar', 'seaborn line']
#        input_xdata = 1, 2
#        input_ydata = 3, 4
#        input_zdata = 5, 6
#        defaultLegendNames plot_legend = 'legend', 'legend2'
############################################################################################


[MAIN] ############ MAIN SETTINGS ########################
# Input File-related Configurations
defaultInputDir  inputfile_directory = 'inputCsvFiles' 'inputFiles'# directory name where input csv files saved
defaultInputFile inputfile_ename = 'plotFromCsv.csv' 'plotFromCsv' # default csv file name of input data
-> inputfile_format = '.csv'
defaultDelimeter inputfile_delimeter = ',' # Default delimeter type for CSV files
defaultEncoding inputfile_encoder = 'utf-8-sig' # Default encoding type for CSV files
# Output figure-related configurations
logDir outputfigure_directory = 'logs' 'outputFiles'# directory name of folder where plot files to be saved
figFormat outputfigure_format = 'pdf' # data format type of the plots to be saved
figDimX outputfigure_xdimension = 25.60 # figure dimensions
figDimY outputfigure_ydimension = 14.40 # figure dimensions
# Figure-related configurations
plotsPerRow figure_plotperrow = 1 # num of subplots per row
oneColSpecPlt figure_singlecolumnnarrowplot = True # Valid iff plotsPerRow = 1. Halve the width of one-column plots. Better x&y scaling for two-column scientific papers
oneColSpecPlt_loc_xTitle figure_singlecolumnnarrowplot_xtitlelocation = 0.3 # Valid iff oneColSpecPlt = True. Lcoation of x title. 0.3 is center.
shareX figure_sharexaxis = False # Have the x-axes of the plots in the same scale. Valid inputs: True, False, 'col', 'row' 
shareY figure_shareyaxis = False # Have the y-axes of the plots in the same scale. Valid inputs: True, False, 'col', 'row'
defaultTitle figure_title = ' ' # Default title name
fetchXLabelFromCsv figure_xlabelfrominputfile = True # Fetch x label name from csv file. It will overwrite the values in defaultXLabel below.
fetchYLabelFromCsv figure_ylabelfrominputfile = True # Fetch y label name from csv file. It will overwrite the values in defaultXLabel below.
fetchZLabelFromCsv figure_zlabelfrominputfile = False # Fetch z label name from csv file. It will overwrite the values in defaultXLabel below.
# Figure legend settings
figLegend figurelegend = False # print a single legend for all suplots
legend_bbox_to_anchor figurelegend_bbox_to_anchor = None # (0.5, -1.25) # !!! IF SET, ONLY THE LEGENDS OF LAST PLOT WILL BE USED !!! Place legend in a specific box configuration. Use 'None' for default. Format: '(x, y) or (x, y, w, h)'. Check out: https://matplotlib.org/api/_as_gen/matplotlib.pyplot.legend.html
legend_loc figurelegend_location = "upper left"
legend_mode figurelegend_mode = None # set to 'expand' if you want horizontal expansion
legend_border_axesPad figurelegend_border_axispad = 0 # legend axis padding
legend_nCol figurelegend_ncolumn = 1 # number of legend columns

[PLOT1] ######################## SETTINGS OF PLOT 1 ########################
# Graph types
-> graph_type = ['bar', 'seaborn line'] # plot types. Valid choices: bar, box, cdf, histogram, line/scatter, seaborn line, seaborn joint.
alpha graph_alpha = [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5] # Transparency level of graphs
# Input data
-> input_xdata = 1, 2 # column number for your x-axis input from input file
-> input_ydata = 3, 4 # column number for your x-axis input from input file
-> input_zdata = 5, 6 # column number for your x-axis input from input file
# Additional y-axis
DELETE IT ??? additionalYAxes multipleyaxis = False # enable multiple y-axis
additionalYAxes_enable multipleyaxis_turnon = True, True # Valid iff additionalYAxes = True. Turn on or off additional y-axes per plot.
axisOffset multipleyaxis_axisoffset = 0.1, 0.1 # Valid iff 'additionalYAxes = True'. y-axes offset value
yLimThreshold multipleyaxis_ylimthreshold = 25, 25 # PER LINE, NOT PER PLOT. Valid iff 'additionalYAxes = True'. Extra values to add to the y limits of additional y-axes. 
# Plot configurations
defaultSubTitleNames plot_title = '' # title name of subplot
defaultLegendNames plot_legend = 'legend', 'legend2' # legend name of data
defaultXLabel plot_xlabel = 'x' # x label of subplot
defaultYLabel plot_ylabel = 'x' # y label of subplot
defaultZLabel plot_zlabel = 'x' # z label of subplot
xAxis_labelPad plot_xlabel_pad = 2, 2 # padding size between x label and xticks in the plot. Increase it if label conflicts with ticks in the plot
yAxis_labelPad plot_ylabel_pad = 2, 2 # padding size between y label and yticks in the plot. Increase it if label conflicts with ticks in the plot
zAxis_labelPad plot_zlabel_pad = 2, 2 # padding size between z label and zticks in the plot. Increase it if label conflicts with ticks in the plot
limX plot_xlimit = (None, None), (None, None) # limit the range of x-axes. E.g. (0, 100) 0: starting point, 100: ending point
limY plot_ylimit = (None, None), (None, None) # limit the range of y-axes. E.g. (0, 100) 0: starting point, 100: ending point 
limZ plot_zlimit = (None, None), (None, None) # limit the range of z-axes. E.g. (0, 100) 0: starting point, 100: ending point
xticks plot_xticks = (None, None, None), (None, None, None) # set spacing of xticks. 
yticks plot_yticks = (None, None, None), (None, None, None) # set spacing of yticks. 
zticks plot_zticks = (None, None, None), (None, None, None) # set spacing of yticks. 
scaleX plot_xscale = 'linear', 'linear' # Scale of x-axes. Valid inputs are: 'linear', 'log', 'symlog', 'logit', ... check out https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.axes.Axes.set_yscale.html
scaleY plot_yscale = 'linear', 'linear' # Scale of y-axes. Valid inputs are: 'linear', 'log', 'symlog', 'logit', ... check out https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.axes.Axes.set_yscale.html
scaleZ plot_zscale = 'linear', 'linear' # Scale of z-axes. Valid inputs are: 'linear', 'log', 'symlog', 'logit', ... check out https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.axes.Axes.set_yscale.html
threeD_azimDegree plot_threed_azimdegree = -160, -160 # Azimuth degree of viewpoint of 3D plots
threeD_elevDegree plot_threed_elevdegree = 30, 30 # Elevation degree of viewpoint of 3D plots
In main program, do it per plot, subplotLegend plotlegend = True # print legend per subplot
# Legend configurations. Valid iff figure_subplotlegend = True 
legend_bbox_to_anchor plotlegend_bbox_to_anchor = None # (0.5, -1.25) # !!! IF SET, ONLY THE LEGENDS OF LAST PLOT WILL BE USED !!! Place legend in a specific box configuration. Use 'None' for default. Format: '(x, y) or (x, y, w, h)'. Check out: https://matplotlib.org/api/_as_gen/matplotlib.pyplot.legend.html
legend_loc plotlegend_location = "upper left"
legend_mode plotlegend_mode = None # set to 'expand' if you want horizontal expansion
legend_border_axesPad plotlegend_border_axisPad = 0
legend_nCol plotlegend_ncolumn = 1 # number of columns

[PLOT2]
deneme = 1
nasilsin = 1, 2, 4, 5